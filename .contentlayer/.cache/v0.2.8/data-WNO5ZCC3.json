{
  "cacheItemsMap": {
    "react-use-reducer-simplified.mdx": {
      "document": {
        "title": "React useReducer hook Simplified",
        "summary": "React useReducer hook Simplified",
        "publishedAt": "2022-08-01",
        "updatedAt": "2022-08-01",
        "tags": [
          "React",
          "AdvancedHooks",
          "Reducer"
        ],
        "body": {
          "raw": "\n# React useReducer Hook simplified\n\nto be honest useReducer hook feels like unga bunga hook if you are using it for the first time, but this is simple uncluttered article to get familiar with useReducer hook.\n\nIf you have used `useState` hook for managing the state like simple strings, arrays, objects you are going to have good time here. `useReducer` is used for this exact purpose that is for managing state. but it gives more flexibility for us to control and update the state.\n\nas a matter of fact useState is built on top of `useReducer` you can think of `useState` hook as a simplified version of `useReducer`\n\n**let's see how to use `useReducer` hook first. then we will deep dive into this hook**\n// Img\n\n```jsx\nconst  countReducer = (prevState, action) =>  {\n\tconsole.log(action)\n\t// logs whatever we passed in dispatch(/* smth */)\n\t// Ex: if we dispatch('bob') in <Counter />, output: 'bob'\n\t// if we do dispatch(1) in <Counter />, output: 1\n\treturn action // this value is our `newState` that reflects on `count` we get from useReducer\n}\n\nfunction  Counter({initialCount: 0}) {\n\tconst [count, dispatch] = useReducer(countReducer, initialCount)\n\n\treturn  <button  onClick={() =>  dispatch(count + 1)}>{count}</button>\n}\n```\n\nHere we just made a counter which we can increment on a button click.\n\n- we will get `[state, dispatch]` array from `useReducer`\n- `useReducer` takes _Reducer function_, _initial state_ as arguments\n- _Reducer function_ accepts two arguments `reducerFn(previousState, action)` and returns `newState`\n\nYou have to focus on terms **state**, **dispatch**, **action**, **reducerFunction** here\n\n- **state:** _count_ is the state we want to manage here\n- **dispatch:** dispatch is a function through which we set the '**action** value' that we accept through our reducer function.\n- **action:** action is a value whatever we passed through function.\n- **reducerFunction:** it is a function through which we take control over and manage our state.\n\n**flow example:**\n\n1. let's say we clicked the button which calls dispatch(count + 1)\n2. this dispatch value go through countReducer function where the new state will be returned.\n3. now `action` value is equal to `count + 1` which is 0 + 1. (`action` = 1)\n4. we are returning the `action` value in the reducerFunction\n5. so our `<Counter />` will rerender because of our state is updated.\n6. now useReducer gives `[count, dispatch]` array where, our count value has updated to `1`\n\n![image](https://user-images.githubusercontent.com/91829843/187974612-2d1b0f0e-eedc-4312-998b-c24dfc65c7dd.png)\n\n**let's add some more things to our counter example with useReducer**\n\n```jsx\nfunction countReducer(prevState, action) {\n const {type, step} = action\n switch (type) {\n   case 'increment': {\n     return {\n       count: prevState.count + step,\n     }}\n   case 'decrement': {\n     return {\n       count: prevState.count - step,\n     }}\n   default: {\n     throw new Error(`Unsupported action type: ${type}`)\n   }}\n}\n\nfunction Counter({initialCount = 0, step = 1}) {\n const [state, dispatch] = React.useReducer(countReducer, {\n   count: initialCount,\n })\n\n const {count} = state\n const increment = () => dispatch({type: 'increment', step})\n const decrement = () => dispatch({type: 'decrement', step})\n return {\n\t  <>\n\t  <h1>{count}</h1>\n\t  <button onClick={increment}>increment</button>\n\t  <button onClick={decrement}>decrement</button>\n\t  </>\n }\n}\n```\n\n[Here is the codesandbox](https://codesandbox.io/s/still-firefly-d1jzc0?file=/src/Counter.js)\nIn this example, we are taking advantage of how `dispatch` and `action` work unlike the previous example.\nwhatever we give to the dispatch, the same will be reflected on `action` then we used switch case. if `action` is a particular value to do a particular operation. this is how most people use action, to navigate and tell what the reducer function should do to give us a new state.\n\nnow, I'm sure you got a good understanding of how useReducer works. Let's see some more examples and scenarios to learn more about this hook.\n\nLet's add an input field to our previous example..\n\n```jsx\nimport \"./styles.css\";\nimport React from \"react\";\n\nfunction countReducer(prevState, action) {\n\tconst { type, step } = action;\n\tconsole.log(prevState);\n\tswitch (type) {\n\t\tcase \"increment\": {\n\t\t\treturn {\n\t\t\t\tcount: prevState.count + step,\n\t\t\t};\n\t\t}\n\t\tcase \"decrement\": {\n\t\t\treturn {\n\t\t\t\tcount: prevState.count - step,\n\t\t\t};\n\t\t}\n\t\tcase \"usernameChange\": {\n\t\t\treturn {\n\t\t\t\tusername: action.username,\n\t\t\t};\n\t\t}\n\t\tdefault: {\n\t\t\tthrow new Error(`Unsupported action type: ${type}`);\n\t\t}\n\t}\n}\n\nexport default function Counter({ initialCount = 0, step = 1 }) {\n\tconst [state, dispatch] = React.useReducer(countReducer, {\n\t\tcount: initialCount,\n\t\tusername: \"\",\n\t});\n\n\tconst { count, username } = state;\n\tconst increment = () => dispatch({ type: \"increment\", step });\n\tconst decrement = () => dispatch({ type: \"decrement\", step });\n\tconst handleChange = (event) => {\n\t\tdispatch({ type: \"usernameChange\", username: event.target.value });\n\t};\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<h1>{count}</h1>\n\t\t\t<button onClick={increment}>increment</button>\n\t\t\t<button onClick={decrement}>decrement</button>\n\t\t\t<div>\n\t\t\t\t<label>\n\t\t\t\t\t{\" \"}\n\t\t\t\t\tUsername:\n\t\t\t\t\t<input type={\"text\"} value={username} onChange={handleChange} />\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<h1> {username} </h1>\n\t\t</div>\n\t);\n}\n```\n\nhere we ahve added `username` to our state. now we can manage our state seamlessly\nbut hang on.. we have a bug in the above code.\nI did it intentionally to reach it in your core memory XD because it is a very common mistake people do.\nthe bug here is, whenever you change a state, for example take `increment` case\n\n```jsx\n    case \"increment\": {\n      return {\n        count: prevState.count + step\n      }}\n```\n\nwe are esentially overriding the whole state with just count in the object. the new state will set to `{cont: prevState.count + step}` we loose our `username` state.\nThis is why we should spread the previous state in the object we are returning.\n**this is the correct way of doing it**\n\n```jsx\n    case \"increment\": {\n      return {\n      ...prevState,\n        count: prevState.count + step\n      }}\n```\n\nWe should always spread the previous state value in the return object. else we'll end up overriding bunch of other states.\n\n[Here is the codesandbox for this example](https://codesandbox.io/s/still-firefly-d1jzc0?file=/src/Counter2.js)\n\n**tip :** If you are managing similar state with the `useState` hook you can do like this\n\n```jsx\nconst [countState, setCountState] = React.useState({ count: 0, name: \"\" });\nconst handleClick = () =>\n\tsetCountState((prevState) => {\n\t\treturn { ...prevState, count: prevState.count + 1 };\n\t});\n```\n\noh wait a min..\nif we can do this whole state thing simply using useState hook what's the point of using this complicated stuff?!!\nyeah right, you don't need to use this if useState can get the job done. most people make use of useReducer in codebases for the sake of maintainability, readability and to have better control over the state.\n\n### When to use useReducer:\n\nit's wise to use useReducer when one element of your state relies on the value of another element of your state in order to update or when the state consists of more than primitive values, like nested object or arrays. if not, you are better off using `useState`\n\n**tip :** do not mix up and add lots of unrelated states into a single reducer. whenever a single state changes you rerender the components which are using this state managed by reducer to get the whole state and UI updated. Imagine one of the component that is so heavy to render and takes lots of resources and time and you re render it unnecessarly. This is why you should only put states which are interrelated together in a single reducer and make separate reducers in order to avoid unnecessary rerenders.\n",
          "code": "var Component=(()=>{var d=Object.create;var c=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,N=Object.prototype.hasOwnProperty;var k=(a,n)=>()=>(n||a((n={exports:{}}).exports,n),n.exports),g=(a,n)=>{for(var s in n)c(a,s,{get:n[s],enumerable:!0})},o=(a,n,s,l)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let t of u(n))!N.call(a,t)&&t!==s&&c(a,t,{get:()=>n[t],enumerable:!(l=h(n,t))||l.enumerable});return a};var y=(a,n,s)=>(s=a!=null?d(m(a)):{},o(n||!a||!a.__esModule?c(s,\"default\",{value:a,enumerable:!0}):s,a)),w=a=>o(c({},\"__esModule\",{value:!0}),a);var r=k((R,i)=>{i.exports=_jsx_runtime});var x={};g(x,{default:()=>b,frontmatter:()=>f});var e=y(r()),f={title:\"React useReducer hook Simplified\",publishedAt:\"2022-08-01\",updatedAt:\"2022-08-01\",summary:\"React useReducer hook Simplified\",tags:[\"React\",\"AdvancedHooks\",\"Reducer\"]};function p(a){let n=Object.assign({h1:\"h1\",p:\"p\",code:\"code\",strong:\"strong\",pre:\"pre\",span:\"span\",ul:\"ul\",li:\"li\",em:\"em\",ol:\"ol\",img:\"img\",a:\"a\",h3:\"h3\"},a.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.h1,{children:\"React useReducer Hook simplified\"}),`\n`,(0,e.jsx)(n.p,{children:\"to be honest useReducer hook feels like unga bunga hook if you are using it for the first time, but this is simple uncluttered article to get familiar with useReducer hook.\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"If you have used \",(0,e.jsx)(n.code,{children:\"useState\"}),\" hook for managing the state like simple strings, arrays, objects you are going to have good time here. \",(0,e.jsx)(n.code,{children:\"useReducer\"}),\" is used for this exact purpose that is for managing state. but it gives more flexibility for us to control and update the state.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"as a matter of fact useState is built on top of \",(0,e.jsx)(n.code,{children:\"useReducer\"}),\" you can think of \",(0,e.jsx)(n.code,{children:\"useState\"}),\" hook as a simplified version of \",(0,e.jsx)(n.code,{children:\"useReducer\"})]}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsxs)(n.strong,{children:[\"let's see how to use \",(0,e.jsx)(n.code,{children:\"useReducer\"}),\" hook first. then we will deep dive into this hook\"]}),`\n// Img`]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-jsx\",children:(0,e.jsxs)(n.code,{className:\"language-jsx code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\"  \",(0,e.jsx)(n.span,{className:\"token function-variable function\",children:\"countReducer\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsxs)(n.span,{className:\"token parameter\",children:[\"prevState\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" action\"]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token arrow operator\",children:\"=>\"}),\"  \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token console class-name\",children:\"console\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token method function property-access\",children:\"log\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"action\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token comment\",children:\"// logs whatever we passed in dispatch(/* smth */)\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token comment\",children:\"// Ex: if we dispatch('bob') in <Counter />, output: 'bob'\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token comment\",children:\"// if we do dispatch(1) in <Counter />, output: 1\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword control-flow\",children:\"return\"}),\" action \",(0,e.jsx)(n.span,{className:\"token comment\",children:\"// this value is our `newState` that reflects on `count` we get from useReducer\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"function\"}),\"  \",(0,e.jsx)(n.span,{className:\"token function\",children:(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"Counter\"})}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsxs)(n.span,{className:\"token parameter\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"initialCount\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"0\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"})]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),\"count\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" dispatch\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"useReducer\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"countReducer\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" initialCount\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword control-flow\",children:\"return\"}),\"  \",(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"<\"}),\"button\"]}),\"  \",(0,e.jsx)(n.span,{className:\"token attr-name\",children:\"onClick\"}),(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[(0,e.jsx)(n.span,{className:\"token script-punctuation punctuation\",children:\"=\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token arrow operator\",children:\"=>\"}),\"  \",(0,e.jsx)(n.span,{className:\"token function\",children:\"dispatch\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"count \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"+\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"1\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"})]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\"count\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"</\"}),\"button\"]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),`\n`,(0,e.jsx)(n.p,{children:\"Here we just made a counter which we can increment on a button click.\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"we will get \",(0,e.jsx)(n.code,{children:\"[state, dispatch]\"}),\" array from \",(0,e.jsx)(n.code,{children:\"useReducer\"})]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"useReducer\"}),\" takes \",(0,e.jsx)(n.em,{children:\"Reducer function\"}),\", \",(0,e.jsx)(n.em,{children:\"initial state\"}),\" as arguments\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.em,{children:\"Reducer function\"}),\" accepts two arguments \",(0,e.jsx)(n.code,{children:\"reducerFn(previousState, action)\"}),\" and returns \",(0,e.jsx)(n.code,{children:\"newState\"})]}),`\n`]}),`\n`,(0,e.jsxs)(n.p,{children:[\"You have to focus on terms \",(0,e.jsx)(n.strong,{children:\"state\"}),\", \",(0,e.jsx)(n.strong,{children:\"dispatch\"}),\", \",(0,e.jsx)(n.strong,{children:\"action\"}),\", \",(0,e.jsx)(n.strong,{children:\"reducerFunction\"}),\" here\"]}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"state:\"}),\" \",(0,e.jsx)(n.em,{children:\"count\"}),\" is the state we want to manage here\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"dispatch:\"}),\" dispatch is a function through which we set the '\",(0,e.jsx)(n.strong,{children:\"action\"}),\" value' that we accept through our reducer function.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"action:\"}),\" action is a value whatever we passed through function.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"reducerFunction:\"}),\" it is a function through which we take control over and manage our state.\"]}),`\n`]}),`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\"flow example:\"})}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsx)(n.li,{children:\"let's say we clicked the button which calls dispatch(count + 1)\"}),`\n`,(0,e.jsx)(n.li,{children:\"this dispatch value go through countReducer function where the new state will be returned.\"}),`\n`,(0,e.jsxs)(n.li,{children:[\"now \",(0,e.jsx)(n.code,{children:\"action\"}),\" value is equal to \",(0,e.jsx)(n.code,{children:\"count + 1\"}),\" which is 0 + 1. (\",(0,e.jsx)(n.code,{children:\"action\"}),\" = 1)\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"we are returning the \",(0,e.jsx)(n.code,{children:\"action\"}),\" value in the reducerFunction\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"so our \",(0,e.jsx)(n.code,{children:\"<Counter />\"}),\" will rerender because of our state is updated.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"now useReducer gives \",(0,e.jsx)(n.code,{children:\"[count, dispatch]\"}),\" array where, our count value has updated to \",(0,e.jsx)(n.code,{children:\"1\"})]}),`\n`]}),`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.img,{src:\"https://user-images.githubusercontent.com/91829843/187974612-2d1b0f0e-eedc-4312-998b-c24dfc65c7dd.png\",alt:\"image\"})}),`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\"let's add some more things to our counter example with useReducer\"})}),`\n`,(0,e.jsx)(n.pre,{className:\"language-jsx\",children:(0,e.jsxs)(n.code,{className:\"language-jsx code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"function\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"countReducer\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsxs)(n.span,{className:\"token parameter\",children:[\"prevState\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" action\"]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\"type\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" step\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),` action\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\" \",(0,e.jsx)(n.span,{className:\"token keyword control-flow\",children:\"switch\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"type\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"   \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"case\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:\"'increment'\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"     \",(0,e.jsx)(n.span,{className:\"token keyword control-flow\",children:\"return\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"       \",(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"count\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" prevState\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token property-access\",children:\"count\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"+\"}),\" step\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"     \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"   \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"case\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:\"'decrement'\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"     \",(0,e.jsx)(n.span,{className:\"token keyword control-flow\",children:\"return\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"       \",(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"count\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" prevState\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token property-access\",children:\"count\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"-\"}),\" step\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"     \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"   \",(0,e.jsx)(n.span,{className:\"token keyword module\",children:\"default\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"     \",(0,e.jsx)(n.span,{className:\"token keyword control-flow\",children:\"throw\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"new\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Error\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsxs)(n.span,{className:\"token template-string\",children:[(0,e.jsx)(n.span,{className:\"token template-punctuation string\",children:\"`\"}),(0,e.jsx)(n.span,{className:\"token string\",children:\"Unsupported action type: \"}),(0,e.jsxs)(n.span,{className:\"token interpolation\",children:[(0,e.jsx)(n.span,{className:\"token interpolation-punctuation punctuation\",children:\"${\"}),\"type\",(0,e.jsx)(n.span,{className:\"token interpolation-punctuation punctuation\",children:\"}\"})]}),(0,e.jsx)(n.span,{className:\"token template-punctuation string\",children:\"`\"})]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"   \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"function\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"Counter\"})}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsxs)(n.span,{className:\"token parameter\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\"initialCount \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"0\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" step \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"1\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"})]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),\"state\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" dispatch\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"React\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token method function property-access\",children:\"useReducer\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"countReducer\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"   \",(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"count\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" initialCount\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\"count\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),` state\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,e.jsx)(n.span,{className:\"token function-variable function\",children:\"increment\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token arrow operator\",children:\"=>\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"dispatch\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"type\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:\"'increment'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" step\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,e.jsx)(n.span,{className:\"token function-variable function\",children:\"decrement\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token arrow operator\",children:\"=>\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"dispatch\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"type\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:\"'decrement'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" step\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\" \",(0,e.jsx)(n.span,{className:\"token keyword control-flow\",children:\"return\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t  \",(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token tag\",children:(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"<\"})}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),(0,e.jsx)(n.span,{className:\"token plain-text\",children:`\n`})]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token plain-text\",children:\"\t  \"}),(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"<\"}),\"h1\"]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\"count\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"</\"}),\"h1\"]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),(0,e.jsx)(n.span,{className:\"token plain-text\",children:`\n`})]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token plain-text\",children:\"\t  \"}),(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"<\"}),\"button\"]}),\" \",(0,e.jsx)(n.span,{className:\"token attr-name\",children:\"onClick\"}),(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[(0,e.jsx)(n.span,{className:\"token script-punctuation punctuation\",children:\"=\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\"increment\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"})]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),(0,e.jsx)(n.span,{className:\"token plain-text\",children:\"increment\"}),(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"</\"}),\"button\"]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),(0,e.jsx)(n.span,{className:\"token plain-text\",children:`\n`})]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token plain-text\",children:\"\t  \"}),(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"<\"}),\"button\"]}),\" \",(0,e.jsx)(n.span,{className:\"token attr-name\",children:\"onClick\"}),(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[(0,e.jsx)(n.span,{className:\"token script-punctuation punctuation\",children:\"=\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\"decrement\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"})]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),(0,e.jsx)(n.span,{className:\"token plain-text\",children:\"decrement\"}),(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"</\"}),\"button\"]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),(0,e.jsx)(n.span,{className:\"token plain-text\",children:`\n`})]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token plain-text\",children:\"\t  \"}),(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token tag\",children:(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"</\"})}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.a,{href:\"https://codesandbox.io/s/still-firefly-d1jzc0?file=/src/Counter.js\",children:\"Here is the codesandbox\"}),`\nIn this example, we are taking advantage of how `,(0,e.jsx)(n.code,{children:\"dispatch\"}),\" and \",(0,e.jsx)(n.code,{children:\"action\"}),` work unlike the previous example.\nwhatever we give to the dispatch, the same will be reflected on `,(0,e.jsx)(n.code,{children:\"action\"}),\" then we used switch case. if \",(0,e.jsx)(n.code,{children:\"action\"}),\" is a particular value to do a particular operation. this is how most people use action, to navigate and tell what the reducer function should do to give us a new state.\"]}),`\n`,(0,e.jsx)(n.p,{children:\"now, I'm sure you got a good understanding of how useReducer works. Let's see some more examples and scenarios to learn more about this hook.\"}),`\n`,(0,e.jsx)(n.p,{children:\"Let's add an input field to our previous example..\"}),`\n`,(0,e.jsx)(n.pre,{className:\"language-jsx\",children:(0,e.jsxs)(n.code,{className:\"language-jsx code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword module\",children:\"import\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"./styles.css\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword module\",children:\"import\"}),\" \",(0,e.jsx)(n.span,{className:\"token imports\",children:(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"React\"})}),\" \",(0,e.jsx)(n.span,{className:\"token keyword module\",children:\"from\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"react\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"function\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"countReducer\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsxs)(n.span,{className:\"token parameter\",children:[\"prevState\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" action\"]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\" type\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" step \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" action\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token console class-name\",children:\"console\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token method function property-access\",children:\"log\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"prevState\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword control-flow\",children:\"switch\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"type\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"case\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"increment\"'}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\t\t\",(0,e.jsx)(n.span,{className:\"token keyword control-flow\",children:\"return\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\t\t\t\",(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"count\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" prevState\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token property-access\",children:\"count\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"+\"}),\" step\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\t\t\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\t\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"case\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"decrement\"'}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\t\t\",(0,e.jsx)(n.span,{className:\"token keyword control-flow\",children:\"return\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\t\t\t\",(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"count\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" prevState\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token property-access\",children:\"count\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"-\"}),\" step\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\t\t\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\t\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"case\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"usernameChange\"'}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\t\t\",(0,e.jsx)(n.span,{className:\"token keyword control-flow\",children:\"return\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\t\t\t\",(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"username\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" action\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token property-access\",children:\"username\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\t\t\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\t\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\t\",(0,e.jsx)(n.span,{className:\"token keyword module\",children:\"default\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\t\t\",(0,e.jsx)(n.span,{className:\"token keyword control-flow\",children:\"throw\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"new\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Error\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsxs)(n.span,{className:\"token template-string\",children:[(0,e.jsx)(n.span,{className:\"token template-punctuation string\",children:\"`\"}),(0,e.jsx)(n.span,{className:\"token string\",children:\"Unsupported action type: \"}),(0,e.jsxs)(n.span,{className:\"token interpolation\",children:[(0,e.jsx)(n.span,{className:\"token interpolation-punctuation punctuation\",children:\"${\"}),\"type\",(0,e.jsx)(n.span,{className:\"token interpolation-punctuation punctuation\",children:\"}\"})]}),(0,e.jsx)(n.span,{className:\"token template-punctuation string\",children:\"`\"})]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\t\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword module\",children:\"export\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword module\",children:\"default\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"function\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"Counter\"})}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsxs)(n.span,{className:\"token parameter\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\" initialCount \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"0\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" step \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"1\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"})]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),\"state\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" dispatch\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"React\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token method function property-access\",children:\"useReducer\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"countReducer\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\t\",(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"count\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" initialCount\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\t\",(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"username\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\" count\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" username \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" state\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,e.jsx)(n.span,{className:\"token function-variable function\",children:\"increment\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token arrow operator\",children:\"=>\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"dispatch\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\" \",(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"type\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"increment\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" step \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,e.jsx)(n.span,{className:\"token function-variable function\",children:\"decrement\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token arrow operator\",children:\"=>\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"dispatch\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\" \",(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"type\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"decrement\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" step \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,e.jsx)(n.span,{className:\"token function-variable function\",children:\"handleChange\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token parameter\",children:\"event\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token arrow operator\",children:\"=>\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\t\",(0,e.jsx)(n.span,{className:\"token function\",children:\"dispatch\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\" \",(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"type\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"usernameChange\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"username\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" event\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token property-access\",children:\"target\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token property-access\",children:\"value\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword control-flow\",children:\"return\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\t\",(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"<\"}),\"div\"]}),\" \",(0,e.jsx)(n.span,{className:\"token attr-name\",children:\"className\"}),(0,e.jsxs)(n.span,{className:\"token attr-value\",children:[(0,e.jsx)(n.span,{className:\"token punctuation attr-equals\",children:\"=\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:'\"'}),\"App\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:'\"'})]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),(0,e.jsx)(n.span,{className:\"token plain-text\",children:`\n`})]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token plain-text\",children:\"\t\t\t\"}),(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"<\"}),\"h1\"]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\"count\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"</\"}),\"h1\"]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),(0,e.jsx)(n.span,{className:\"token plain-text\",children:`\n`})]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token plain-text\",children:\"\t\t\t\"}),(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"<\"}),\"button\"]}),\" \",(0,e.jsx)(n.span,{className:\"token attr-name\",children:\"onClick\"}),(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[(0,e.jsx)(n.span,{className:\"token script-punctuation punctuation\",children:\"=\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\"increment\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"})]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),(0,e.jsx)(n.span,{className:\"token plain-text\",children:\"increment\"}),(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"</\"}),\"button\"]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),(0,e.jsx)(n.span,{className:\"token plain-text\",children:`\n`})]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token plain-text\",children:\"\t\t\t\"}),(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"<\"}),\"button\"]}),\" \",(0,e.jsx)(n.span,{className:\"token attr-name\",children:\"onClick\"}),(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[(0,e.jsx)(n.span,{className:\"token script-punctuation punctuation\",children:\"=\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\"decrement\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"})]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),(0,e.jsx)(n.span,{className:\"token plain-text\",children:\"decrement\"}),(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"</\"}),\"button\"]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),(0,e.jsx)(n.span,{className:\"token plain-text\",children:`\n`})]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token plain-text\",children:\"\t\t\t\"}),(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"<\"}),\"div\"]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),(0,e.jsx)(n.span,{className:\"token plain-text\",children:`\n`})]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token plain-text\",children:\"\t\t\t\t\"}),(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"<\"}),\"label\"]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),(0,e.jsx)(n.span,{className:\"token plain-text\",children:`\n`})]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token plain-text\",children:\"\t\t\t\t\t\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),(0,e.jsx)(n.span,{className:\"token string\",children:'\" \"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token plain-text\",children:`\n`})]}),(0,e.jsx)(n.span,{className:\"code-line\",children:(0,e.jsx)(n.span,{className:\"token plain-text\",children:`\t\t\t\t\tUsername:\n`})}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token plain-text\",children:\"\t\t\t\t\t\"}),(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"<\"}),\"input\"]}),\" \",(0,e.jsx)(n.span,{className:\"token attr-name\",children:\"type\"}),(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[(0,e.jsx)(n.span,{className:\"token script-punctuation punctuation\",children:\"=\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),(0,e.jsx)(n.span,{className:\"token string\",children:'\"text\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"})]}),\" \",(0,e.jsx)(n.span,{className:\"token attr-name\",children:\"value\"}),(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[(0,e.jsx)(n.span,{className:\"token script-punctuation punctuation\",children:\"=\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\"username\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"})]}),\" \",(0,e.jsx)(n.span,{className:\"token attr-name\",children:\"onChange\"}),(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[(0,e.jsx)(n.span,{className:\"token script-punctuation punctuation\",children:\"=\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\"handleChange\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"})]}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"/>\"})]}),(0,e.jsx)(n.span,{className:\"token plain-text\",children:`\n`})]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token plain-text\",children:\"\t\t\t\t\"}),(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"</\"}),\"label\"]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),(0,e.jsx)(n.span,{className:\"token plain-text\",children:`\n`})]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token plain-text\",children:\"\t\t\t\"}),(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"</\"}),\"div\"]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),(0,e.jsx)(n.span,{className:\"token plain-text\",children:`\n`})]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token plain-text\",children:\"\t\t\t\"}),(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"<\"}),\"h1\"]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),(0,e.jsx)(n.span,{className:\"token plain-text\",children:\" \"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\"username\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token plain-text\",children:\" \"}),(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"</\"}),\"h1\"]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),(0,e.jsx)(n.span,{className:\"token plain-text\",children:`\n`})]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token plain-text\",children:\"\t\t\"}),(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"</\"}),\"div\"]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),`\n`,(0,e.jsxs)(n.p,{children:[\"here we ahve added \",(0,e.jsx)(n.code,{children:\"username\"}),` to our state. now we can manage our state seamlessly\nbut hang on.. we have a bug in the above code.\nI did it intentionally to reach it in your core memory XD because it is a very common mistake people do.\nthe bug here is, whenever you change a state, for example take `,(0,e.jsx)(n.code,{children:\"increment\"}),\" case\"]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-jsx\",children:(0,e.jsxs)(n.code,{className:\"language-jsx code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"case\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"increment\"'}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token keyword control-flow\",children:\"return\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"count\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" prevState\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token property-access\",children:\"count\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"+\"}),` step\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),`\n`,(0,e.jsxs)(n.p,{children:[\"we are esentially overriding the whole state with just count in the object. the new state will set to \",(0,e.jsx)(n.code,{children:\"{cont: prevState.count + step}\"}),\" we loose our \",(0,e.jsx)(n.code,{children:\"username\"}),` state.\nThis is why we should spread the previous state in the object we are returning.\n`,(0,e.jsx)(n.strong,{children:\"this is the correct way of doing it\"})]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-jsx\",children:(0,e.jsxs)(n.code,{className:\"language-jsx code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"case\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"increment\"'}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token keyword control-flow\",children:\"return\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token spread operator\",children:\"...\"}),\"prevState\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"count\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" prevState\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token property-access\",children:\"count\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"+\"}),` step\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),`\n`,(0,e.jsx)(n.p,{children:\"We should always spread the previous state value in the return object. else we'll end up overriding bunch of other states.\"}),`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.a,{href:\"https://codesandbox.io/s/still-firefly-d1jzc0?file=/src/Counter2.js\",children:\"Here is the codesandbox for this example\"})}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.strong,{children:\"tip :\"}),\" If you are managing similar state with the \",(0,e.jsx)(n.code,{children:\"useState\"}),\" hook you can do like this\"]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-jsx\",children:(0,e.jsxs)(n.code,{className:\"language-jsx code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),\"countState\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" setCountState\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"React\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token method function property-access\",children:\"useState\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\" \",(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"count\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"0\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"name\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"\"'}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,e.jsx)(n.span,{className:\"token function-variable function\",children:\"handleClick\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token arrow operator\",children:\"=>\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token function\",children:\"setCountState\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token parameter\",children:\"prevState\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token arrow operator\",children:\"=>\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\t\",(0,e.jsx)(n.span,{className:\"token keyword control-flow\",children:\"return\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\" \",(0,e.jsx)(n.span,{className:\"token spread operator\",children:\"...\"}),\"prevState\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"count\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" prevState\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token property-access\",children:\"count\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"+\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"1\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]})]})}),`\n`,(0,e.jsx)(n.p,{children:`oh wait a min..\nif we can do this whole state thing simply using useState hook what's the point of using this complicated stuff?!!\nyeah right, you don't need to use this if useState can get the job done. most people make use of useReducer in codebases for the sake of maintainability, readability and to have better control over the state.`}),`\n`,(0,e.jsx)(n.h3,{children:\"When to use useReducer:\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"it's wise to use useReducer when one element of your state relies on the value of another element of your state in order to update or when the state consists of more than primitive values, like nested object or arrays. if not, you are better off using \",(0,e.jsx)(n.code,{children:\"useState\"})]}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.strong,{children:\"tip :\"}),\" do not mix up and add lots of unrelated states into a single reducer. whenever a single state changes you rerender the components which are using this state managed by reducer to get the whole state and UI updated. Imagine one of the component that is so heavy to render and takes lots of resources and time and you re render it unnecessarly. This is why you should only put states which are interrelated together in a single reducer and make separate reducers in order to avoid unnecessary rerenders.\"]})]})}function v(a={}){let{wrapper:n}=a.components||{};return n?(0,e.jsx)(n,Object.assign({},a,{children:(0,e.jsx)(p,a)})):p(a)}var b=v;return w(x);})();\n;return Component;"
        },
        "_id": "react-use-reducer-simplified.mdx",
        "_raw": {
          "sourceFilePath": "react-use-reducer-simplified.mdx",
          "sourceFileName": "react-use-reducer-simplified.mdx",
          "sourceFileDir": ".",
          "contentType": "mdx",
          "flattenedPath": "react-use-reducer-simplified"
        },
        "type": "Post",
        "slug": "react-use-reducer-simplified",
        "image": "/blog/react-use-reducer-simplified/image.png",
        "og": "/blog/react-use-reducer-simplified/og.jpg",
        "readingTime": {
          "text": "6 min read",
          "minutes": 5.895,
          "time": 353700,
          "words": 1179
        }
      },
      "documentHash": "1663587454636",
      "hasWarnings": false,
      "documentTypeName": "Post"
    },
    "use-state-lazy-init.mdx": {
      "document": {
        "title": "Lazy Initilization and storing functions in React useState hook",
        "summary": "Lazy Initilization and storing functions in React useState hook",
        "publishedAt": "2022-08-28",
        "updatedAt": "2022-08-28",
        "tags": [
          "React",
          "React-hooks"
        ],
        "body": {
          "raw": "\n# Lazy Initialization and Storing functions with React useState hook\n\nWe often use fairly simple `useState` hook in our apps. sometimes using it might lead to some tiny performance issues. We'll go through some scenarios how to optimize perfomance with Lazy initialization of state in some scenarios. This article is a deep dive through our favorite `useState` hook.\n\n`useState` hook can also accept a callback function. it can accept a state `T` or a Function that returns a state of type `T`. where `T` can be a String, Number, Array, or an Object.\n\n**This is the signature of useState hook.**\n\n```javascript\nfunction  useState<T>(initialState: T | (() =>  T)): [T, Dispatch<SetStateAction<T>>];\n```\n\n- `useState` hook is an abstraction of `useDispatch` hook of basic level.\n- You can think of `[state, setState]` as `[state, dispatch]` that we get from [`useReducer`](https://reactjs.org/docs/hooks-reference.html#usereducer) where we modify the state using `dispatch` function, so `setState` is a simplified `dispatch` function.\n\n\\\n&nbsp;\n\n## Lazy Initialization of state\n\nReact useState hook can take a callback function as an initial value, this is called as lazy initialization of state.\n\nWhich means the return value of callback function going to set the state only once throughout the lifecycle of that component when the component mounts and rendered initially.\n\n```jsx\nconst [state, setState] =\n\tuseState <\n\tstring >\n\t(() => {\n\t\tconsole.log(\"function call\"); // this will log for only once in the lifecycle of the component\n\t\tconst initialState: string = someExpensiveComputation(props);\n\t\treturn initialState;\n\t});\n// This is called as lazy initialization of state\n```\n\n**Tips:**\n\n- Always remember to return the value of type you want to set the state for in the callback function, doing not so can lead to [uncontrolled components](https://codesandbox.io/s/dazzling-jones-b6w4q5?file=/src/ControlledUncontrolled.jsx) sometimes.\n- Lazy initialization of state is analogous to passing initial state through `useDispatch(reducerFn, initialValue)`\n- `useReducer` is usually preferable to `useState` when you have complex state logic that involves multiple sub-values. It also lets you optimize performance for components that trigger deep updates because you can pass `dispatch` down instead of callbacks.\n\nIt can be handy and performant when you are using custom hooks that utilize useState or when reading the state gets expensive.\n\nI can think of a scenario where reading the state can get expensive is when we are managing a state of browser localstorage value.\n\n```javascript\n// Here is a basic implementation of a custom hook for maintaining the state of localstorage value\n\nfunction useLocalStorageState(key, defaultValue = \"\") {\n\tconst [state, setState] = React.useState(() => {\n\t\t// We don't want to get our state value everytime from localstorage as it can take some time and lead to perfomance issues\n\t\tconst valueInLocalStorage = window.localStorage.getItem(key);\n\t\tif (valueInLocalStorage) {\n\t\t\treturn JSON.stringify(valueInLocalStorage);\n\t\t}\n\t\treturn typeof defaultValue === \"function\" ? defaultValue() : defaultValue;\n\t});\n\n\tReact.useEffect(() => {\n\t\twindow.localStorage.setItem(key, JSON.parse(state));\n\t}, [key, state]);\n\treturn [state, setState];\n}\n```\n\nWhen we are calling this custom hook from other components like below, we don't want to set the initial value to `initialValue` everytime and override the localstorage value. _so setting the value lazily can get us out of this situation without overriding the localstorage value and it helps in increasing the performance of the app by saving calls to localstorage for the value._\n\n```javascript\nlet storage = useLocalStorageName(\"keyName\", initialValue);\n```\n\n## Storing a function with useState hook :\n\nYes, you heard it right. we can store a function with `useState` hook.\nbut merely passing a function to setState won't do this work. We should return a function to a callback function\n\n```jsx\nconst [myState, setMyState] = React.useState((x) => 5 * x);\n// this don't set the myState to a function, remember Lazy initialization. in fact it is illegal to pass arguments to callback function for useState.\n```\n\ndoing this will set the state to a function.\n\n```jsx\nconst [myState, setMyState] = React.useState(() => (x) => 5 * x);\n// this will set the myState to a function.\n```\n\nif you pass a function as a call back function and return it, the state will get initialized with a function.\n\n```jsx\n// Now we can use myState as a function\nlet value = myState(10);\nconsole.log(value);\n// output: 50\n\nconsole.log(myState(20));\n// output: 100\n```\n\n\\\n&nbsp;\n\n## How can we mutate a state hook with a function?\n\nJust like initialisation, passing a function to a state setter has a special meaning in React.\n\n[It is used when you want to compute the next state “reductively,”](https://reactjs.org/docs/hooks-reference.html#functional-updates)\n\n```jsx\nconst [count, setCount] = useState(initialCount);\nsetCount((prevCount) => prevCount + 1); // increase the count by one\n// passing a function to setCount will result in updating the previous state value with return value of the function with previous state value as an argument.\n```\n\nif we intend to change the state which store function, doing this will update the\n\n```jsx\nsetMyState(() => (x) => 2 * x);\n```\n\nnow myState has updated to a new function we set\n\n```jsx\nmyState(10);\n// output: 20\n```\n\nHere is a [ codesandbox](https://codesandbox.io/s/busy-kapitsa-c7pkfm?file=/src/App.js:365-395) you can play with.\n\\\n&nbsp;\n\n> Although it is possible to store functions with useState hook don't abuse it, consider using useCallback hook for storing functions.\n\n\\\n&nbsp;\n\\\n&nbsp;\n\n## TL;DR\n\nThere is a subtle difference how you store a state value and how you store a function with react useState hook. If you pass a callback function returning a value to the useState hook, state will be initialized for only for once with the value you are returning when the component mounts and rendered for the first time. It is called Lazy Initialization of state.\n\n```jsx\nconst [state, setState] = useState(() => {\n\tconsole.log(\"function call\"); // this will log for only once in the lifecycle of the component\n\treturn \"This is set for the first time\";\n});\n// This is called as lazy initialization of state\n```\n\nif you pass a function as a call back function and return it the state will get initialized with a function.\n\n```jsx\nconst [multiplyState, setMultiplyFn] = useState(() => (x) => 5 * x);\nconst product = multiplyState(10); // product is 50\n// Although it is possible to store functions with useState hook consider using useCallback hook for this purpose\n```\n\n```jsx\n// this won't store a function in the state\nconst [multiplyFn] = useState((x) => 3 * x);\nconst product = myMultiplier(10);\n```\n",
          "code": "var Component=(()=>{var d=Object.create;var c=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,N=Object.prototype.hasOwnProperty;var k=(a,n)=>()=>(n||a((n={exports:{}}).exports,n),n.exports),g=(a,n)=>{for(var s in n)c(a,s,{get:n[s],enumerable:!0})},l=(a,n,s,o)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let t of u(n))!N.call(a,t)&&t!==s&&c(a,t,{get:()=>n[t],enumerable:!(o=h(n,t))||o.enumerable});return a};var f=(a,n,s)=>(s=a!=null?d(m(a)):{},l(n||!a||!a.__esModule?c(s,\"default\",{value:a,enumerable:!0}):s,a)),y=a=>l(c({},\"__esModule\",{value:!0}),a);var r=k((j,i)=>{i.exports=_jsx_runtime});var v={};g(v,{default:()=>S,frontmatter:()=>w});var e=f(r()),w={title:\"Lazy Initilization and storing functions in React useState hook\",publishedAt:\"2022-08-28\",updatedAt:\"2022-08-28\",summary:\"Lazy Initilization and storing functions in React useState hook\",tags:[\"React\",\"React-hooks\"]};function p(a){let n=Object.assign({h1:\"h1\",p:\"p\",code:\"code\",strong:\"strong\",pre:\"pre\",span:\"span\",ul:\"ul\",li:\"li\",a:\"a\",br:\"br\",h2:\"h2\",em:\"em\",blockquote:\"blockquote\"},a.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.h1,{children:\"Lazy Initialization and Storing functions with React useState hook\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"We often use fairly simple \",(0,e.jsx)(n.code,{children:\"useState\"}),\" hook in our apps. sometimes using it might lead to some tiny performance issues. We'll go through some scenarios how to optimize perfomance with Lazy initialization of state in some scenarios. This article is a deep dive through our favorite \",(0,e.jsx)(n.code,{children:\"useState\"}),\" hook.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.code,{children:\"useState\"}),\" hook can also accept a callback function. it can accept a state \",(0,e.jsx)(n.code,{children:\"T\"}),\" or a Function that returns a state of type \",(0,e.jsx)(n.code,{children:\"T\"}),\". where \",(0,e.jsx)(n.code,{children:\"T\"}),\" can be a String, Number, Array, or an Object.\"]}),`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\"This is the signature of useState hook.\"})}),`\n`,(0,e.jsx)(n.pre,{className:\"language-javascript\",children:(0,e.jsx)(n.code,{className:\"language-javascript code-highlight\",children:(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"function\"}),\"  useState\",(0,e.jsx)(n.span,{className:\"token operator\",children:\"<\"}),(0,e.jsx)(n.span,{className:\"token constant\",children:\"T\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\">\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"initialState\",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token constant\",children:\"T\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"|\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token arrow operator\",children:\"=>\"}),\"  \",(0,e.jsx)(n.span,{className:\"token constant\",children:\"T\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),(0,e.jsx)(n.span,{className:\"token constant\",children:\"T\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"Dispatch\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\"<\"}),(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"SetStateAction\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\"<\"}),(0,e.jsx)(n.span,{className:\"token constant\",children:\"T\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\">>\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]})})}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"useState\"}),\" hook is an abstraction of \",(0,e.jsx)(n.code,{children:\"useDispatch\"}),\" hook of basic level.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"You can think of \",(0,e.jsx)(n.code,{children:\"[state, setState]\"}),\" as \",(0,e.jsx)(n.code,{children:\"[state, dispatch]\"}),\" that we get from \",(0,e.jsx)(n.a,{href:\"https://reactjs.org/docs/hooks-reference.html#usereducer\",children:(0,e.jsx)(n.code,{children:\"useReducer\"})}),\" where we modify the state using \",(0,e.jsx)(n.code,{children:\"dispatch\"}),\" function, so \",(0,e.jsx)(n.code,{children:\"setState\"}),\" is a simplified \",(0,e.jsx)(n.code,{children:\"dispatch\"}),\" function.\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.br,{}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"Lazy Initialization of state\"}),`\n`,(0,e.jsx)(n.p,{children:\"React useState hook can take a callback function as an initial value, this is called as lazy initialization of state.\"}),`\n`,(0,e.jsx)(n.p,{children:\"Which means the return value of callback function going to set the state only once throughout the lifecycle of that component when the component mounts and rendered initially.\"}),`\n`,(0,e.jsx)(n.pre,{className:\"language-jsx\",children:(0,e.jsxs)(n.code,{className:\"language-jsx code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),\"state\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" setState\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\tuseState \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"<\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\tstring \",(0,e.jsx)(n.span,{className:\"token operator\",children:\">\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token arrow operator\",children:\"=>\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\t\",(0,e.jsx)(n.span,{className:\"token console class-name\",children:\"console\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token method function property-access\",children:\"log\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token string\",children:'\"function call\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),\" \",(0,e.jsx)(n.span,{className:\"token comment\",children:\"// this will log for only once in the lifecycle of the component\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"initialState\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" string \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"someExpensiveComputation\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"props\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\t\",(0,e.jsx)(n.span,{className:\"token keyword control-flow\",children:\"return\"}),\" initialState\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token comment\",children:\"// This is called as lazy initialization of state\"}),`\n`]})]})}),`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\"Tips:\"})}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Always remember to return the value of type you want to set the state for in the callback function, doing not so can lead to \",(0,e.jsx)(n.a,{href:\"https://codesandbox.io/s/dazzling-jones-b6w4q5?file=/src/ControlledUncontrolled.jsx\",children:\"uncontrolled components\"}),\" sometimes.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Lazy initialization of state is analogous to passing initial state through \",(0,e.jsx)(n.code,{children:\"useDispatch(reducerFn, initialValue)\"})]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"useReducer\"}),\" is usually preferable to \",(0,e.jsx)(n.code,{children:\"useState\"}),\" when you have complex state logic that involves multiple sub-values. It also lets you optimize performance for components that trigger deep updates because you can pass \",(0,e.jsx)(n.code,{children:\"dispatch\"}),\" down instead of callbacks.\"]}),`\n`]}),`\n`,(0,e.jsx)(n.p,{children:\"It can be handy and performant when you are using custom hooks that utilize useState or when reading the state gets expensive.\"}),`\n`,(0,e.jsx)(n.p,{children:\"I can think of a scenario where reading the state can get expensive is when we are managing a state of browser localstorage value.\"}),`\n`,(0,e.jsx)(n.pre,{className:\"language-javascript\",children:(0,e.jsxs)(n.code,{className:\"language-javascript code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token comment\",children:\"// Here is a basic implementation of a custom hook for maintaining the state of localstorage value\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"function\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"useLocalStorageState\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"key\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" defaultValue \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),\"state\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" setState\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"React\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token method function property-access\",children:\"useState\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token arrow operator\",children:\"=>\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\t\",(0,e.jsx)(n.span,{className:\"token comment\",children:\"// We don't want to get our state value everytime from localstorage as it can take some time and lead to perfomance issues\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\t\",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" valueInLocalStorage \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token dom variable\",children:\"window\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token property-access\",children:\"localStorage\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token method function property-access\",children:\"getItem\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"key\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\t\",(0,e.jsx)(n.span,{className:\"token keyword control-flow\",children:\"if\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"valueInLocalStorage\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\t\t\",(0,e.jsx)(n.span,{className:\"token keyword control-flow\",children:\"return\"}),\" \",(0,e.jsx)(n.span,{className:\"token known-class-name class-name\",children:\"JSON\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token method function property-access\",children:\"stringify\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"valueInLocalStorage\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\t\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\t\",(0,e.jsx)(n.span,{className:\"token keyword control-flow\",children:\"return\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"typeof\"}),\" defaultValue \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"===\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"function\"'}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"?\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"defaultValue\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" defaultValue\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"React\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token method function property-access\",children:\"useEffect\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token arrow operator\",children:\"=>\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\t\",(0,e.jsx)(n.span,{className:\"token dom variable\",children:\"window\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token property-access\",children:\"localStorage\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token method function property-access\",children:\"setItem\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"key\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token known-class-name class-name\",children:\"JSON\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token method function property-access\",children:\"parse\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"state\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),\"key\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" state\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword control-flow\",children:\"return\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),\"state\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" setState\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),`\n`,(0,e.jsxs)(n.p,{children:[\"When we are calling this custom hook from other components like below, we don't want to set the initial value to \",(0,e.jsx)(n.code,{children:\"initialValue\"}),\" everytime and override the localstorage value. \",(0,e.jsx)(n.em,{children:\"so setting the value lazily can get us out of this situation without overriding the localstorage value and it helps in increasing the performance of the app by saving calls to localstorage for the value.\"})]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-javascript\",children:(0,e.jsx)(n.code,{className:\"language-javascript code-highlight\",children:(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"let\"}),\" storage \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"useLocalStorageName\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token string\",children:'\"keyName\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" initialValue\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]})})}),`\n`,(0,e.jsx)(n.h2,{children:\"Storing a function with useState hook :\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Yes, you heard it right. we can store a function with \",(0,e.jsx)(n.code,{children:\"useState\"}),` hook.\nbut merely passing a function to setState won't do this work. We should return a function to a callback function`]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-jsx\",children:(0,e.jsxs)(n.code,{className:\"language-jsx code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),\"myState\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" setMyState\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"React\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token method function property-access\",children:\"useState\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token parameter\",children:\"x\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token arrow operator\",children:\"=>\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"5\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"*\"}),\" x\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token comment\",children:\"// this don't set the myState to a function, remember Lazy initialization. in fact it is illegal to pass arguments to callback function for useState.\"}),`\n`]})]})}),`\n`,(0,e.jsx)(n.p,{children:\"doing this will set the state to a function.\"}),`\n`,(0,e.jsx)(n.pre,{className:\"language-jsx\",children:(0,e.jsxs)(n.code,{className:\"language-jsx code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),\"myState\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" setMyState\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token maybe-class-name\",children:\"React\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token method function property-access\",children:\"useState\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token arrow operator\",children:\"=>\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token parameter\",children:\"x\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token arrow operator\",children:\"=>\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"5\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"*\"}),\" x\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token comment\",children:\"// this will set the myState to a function.\"}),`\n`]})]})}),`\n`,(0,e.jsx)(n.p,{children:\"if you pass a function as a call back function and return it, the state will get initialized with a function.\"}),`\n`,(0,e.jsx)(n.pre,{className:\"language-jsx\",children:(0,e.jsxs)(n.code,{className:\"language-jsx code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token comment\",children:\"// Now we can use myState as a function\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"let\"}),\" value \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"myState\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token number\",children:\"10\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token console class-name\",children:\"console\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token method function property-access\",children:\"log\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"value\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token comment\",children:\"// output: 50\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token console class-name\",children:\"console\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token method function property-access\",children:\"log\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token function\",children:\"myState\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token number\",children:\"20\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token comment\",children:\"// output: 100\"}),`\n`]})]})}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.br,{}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"How can we mutate a state hook with a function?\"}),`\n`,(0,e.jsx)(n.p,{children:\"Just like initialisation, passing a function to a state setter has a special meaning in React.\"}),`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.a,{href:\"https://reactjs.org/docs/hooks-reference.html#functional-updates\",children:\"It is used when you want to compute the next state \\u201Creductively,\\u201D\"})}),`\n`,(0,e.jsx)(n.pre,{className:\"language-jsx\",children:(0,e.jsxs)(n.code,{className:\"language-jsx code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),\"count\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" setCount\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"useState\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"initialCount\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token function\",children:\"setCount\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token parameter\",children:\"prevCount\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token arrow operator\",children:\"=>\"}),\" prevCount \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"+\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"1\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),\" \",(0,e.jsx)(n.span,{className:\"token comment\",children:\"// increase the count by one\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token comment\",children:\"// passing a function to setCount will result in updating the previous state value with return value of the function with previous state value as an argument.\"}),`\n`]})]})}),`\n`,(0,e.jsx)(n.p,{children:\"if we intend to change the state which store function, doing this will update the\"}),`\n`,(0,e.jsx)(n.pre,{className:\"language-jsx\",children:(0,e.jsx)(n.code,{className:\"language-jsx code-highlight\",children:(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token function\",children:\"setMyState\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token arrow operator\",children:\"=>\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token parameter\",children:\"x\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token arrow operator\",children:\"=>\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"2\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"*\"}),\" x\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]})})}),`\n`,(0,e.jsx)(n.p,{children:\"now myState has updated to a new function we set\"}),`\n`,(0,e.jsx)(n.pre,{className:\"language-jsx\",children:(0,e.jsxs)(n.code,{className:\"language-jsx code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token function\",children:\"myState\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token number\",children:\"10\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token comment\",children:\"// output: 20\"}),`\n`]})]})}),`\n`,(0,e.jsxs)(n.p,{children:[\"Here is a \",(0,e.jsx)(n.a,{href:\"https://codesandbox.io/s/busy-kapitsa-c7pkfm?file=/src/App.js:365-395\",children:\" codesandbox\"}),` you can play with.\n`,(0,e.jsx)(n.br,{}),`\n`]}),`\n`,(0,e.jsxs)(n.blockquote,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Although it is possible to store functions with useState hook don't abuse it, consider using useCallback hook for storing functions.\"}),`\n`]}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.br,{}),`\n`,(0,e.jsx)(n.br,{}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"TL;DR\"}),`\n`,(0,e.jsx)(n.p,{children:\"There is a subtle difference how you store a state value and how you store a function with react useState hook. If you pass a callback function returning a value to the useState hook, state will be initialized for only for once with the value you are returning when the component mounts and rendered for the first time. It is called Lazy Initialization of state.\"}),`\n`,(0,e.jsx)(n.pre,{className:\"language-jsx\",children:(0,e.jsxs)(n.code,{className:\"language-jsx code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),\"state\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" setState\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"useState\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token arrow operator\",children:\"=>\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token console class-name\",children:\"console\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token method function property-access\",children:\"log\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token string\",children:'\"function call\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),\" \",(0,e.jsx)(n.span,{className:\"token comment\",children:\"// this will log for only once in the lifecycle of the component\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"\t\",(0,e.jsx)(n.span,{className:\"token keyword control-flow\",children:\"return\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"This is set for the first time\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token comment\",children:\"// This is called as lazy initialization of state\"}),`\n`]})]})}),`\n`,(0,e.jsx)(n.p,{children:\"if you pass a function as a call back function and return it the state will get initialized with a function.\"}),`\n`,(0,e.jsx)(n.pre,{className:\"language-jsx\",children:(0,e.jsxs)(n.code,{className:\"language-jsx code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),\"multiplyState\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" setMultiplyFn\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"useState\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token arrow operator\",children:\"=>\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token parameter\",children:\"x\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token arrow operator\",children:\"=>\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"5\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"*\"}),\" x\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" product \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"multiplyState\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token number\",children:\"10\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),\" \",(0,e.jsx)(n.span,{className:\"token comment\",children:\"// product is 50\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token comment\",children:\"// Although it is possible to store functions with useState hook consider using useCallback hook for this purpose\"}),`\n`]})]})}),`\n`,(0,e.jsx)(n.pre,{className:\"language-jsx\",children:(0,e.jsxs)(n.code,{className:\"language-jsx code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token comment\",children:\"// this won't store a function in the state\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),\"multiplyFn\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"useState\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token parameter\",children:\"x\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token arrow operator\",children:\"=>\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"3\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"*\"}),\" x\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" product \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"myMultiplier\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token number\",children:\"10\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]})]})})]})}function b(a={}){let{wrapper:n}=a.components||{};return n?(0,e.jsx)(n,Object.assign({},a,{children:(0,e.jsx)(p,a)})):p(a)}var S=b;return y(v);})();\n;return Component;"
        },
        "_id": "use-state-lazy-init.mdx",
        "_raw": {
          "sourceFilePath": "use-state-lazy-init.mdx",
          "sourceFileName": "use-state-lazy-init.mdx",
          "sourceFileDir": ".",
          "contentType": "mdx",
          "flattenedPath": "use-state-lazy-init"
        },
        "type": "Post",
        "slug": "use-state-lazy-init",
        "image": "/blog/use-state-lazy-init/image.png",
        "og": "/blog/use-state-lazy-init/og.jpg",
        "readingTime": {
          "text": "6 min read",
          "minutes": 5.22,
          "time": 313200,
          "words": 1044
        }
      },
      "documentHash": "1663426190073",
      "hasWarnings": false,
      "documentTypeName": "Post"
    }
  }
}
